@using RezRouting.AspNetMvc.UrlGeneration
@using RezRouting.Demos.Crud.Controllers.Products
@using RezRouting.Demos.Crud.Utility
@model RezRouting.Demos.Crud.Controllers.Home.HomeModel

@{
    ViewBag.Title = "Home";
}

<h2>Latest Products</h2>
<ul>
    @foreach (var product in Model.LatestProducts)
    {
        <li><a href="@Url.Action("Show", "Product", new { id = product.Id })">@product.Name</a></li>
    }
</ul>
<h2>URL Generation</h2>
<p><a href="@Url.Action("Index", "Products")">View All</a> - Using built-in MVC outbound URL generation</p>
<p><a href="@Url.ResourceUrl(typeof(ProductsController), "Index", null)">View All</a> - Using a built-in RezRouting UrlHelper extension method</p>
<p><a href="@Url.ResourceAction((ProductsController c) => c.Index())">View All</a> - Using a custom expression-tree based UrlHelper extension method. An expression-tree based variation isn't built-in to RezRouting, as this would involve the library referencing Microsoft.Web.Mvc.Futures. As shown here, it's very easy to add this customisation directly to a web application.</p>

